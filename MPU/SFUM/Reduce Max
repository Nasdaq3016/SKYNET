module redumax (
  input clk,
  input [15:0] data_0, input [15:0] data_1, input [15:0] data_2, input [15:0] data_3,
  input [15:0] data_4, input [15:0] data_5, input [15:0] data_6, input [15:0] data_7,
  input [15:0] data_8, input [15:0] data_9, input [15:0] data_10, input [15:0] data_11,
  input [15:0] data_12, input [15:0] data_13, input [15:0] data_14, input [15:0] data_15,
  output [15:0] max_val
);
  reg [15:0] array [15:0];
  reg [15:0] curr_max;
  integer i;  
always @(*)  begin
  array [0] = data_0; array[1] = data_1; array[2] = data_2; array [3] = data_3;
  array [4] = data_4; array[5] = data_5; array[6] = data_6; array [7] = data_7;
  array [8] = data_8; array[9] = data_9; array[10] = data_10; array [11] = data_11;
  array [12] = data_12; array[13] = data_13; array[14] = data_14; array [15] = data_15;
  curr_max = array[0];
  for (i = 0; i < 16; i = i + 1)
    begin 
    if  ((curr_max[15:15] > array[i][15:15]) ||
        ((curr_max[15:15] == array[i][15:15]) && (curr_max[14:10] < array[i][14:10])) ||
        ((curr_max[15:15] == array[i][15:15]) && (curr_max[14:10] == array[i][14:10]) && (curr_max[9:0] < array[i][9:0])))
        curr_max = array[i];
    end
end
    assign max_val = curr_max;
 endmodule
