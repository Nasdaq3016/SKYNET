module add_1(
    input clk,
    input rst,
    input signed[15:0] A,
    input signed[15:0] B,
    input Ci,
    output reg [15:0] S,
    output reg Co,
    output signed [16:0] result
    );
    reg[16:0] Sum16;
    reg signed [16:0] temp_result;
    reg signed [15:0] A_reg;
    reg signed [15:0] B_reg;
 
    initial 
        begin
            A_reg <= A;
            B_reg <= B;  
        end
        
     always @ (negedge rst)
        begin
            A_reg <= 16'b0000000000000000;
            B_reg <= 16'b0000000000000000;
        end
     
     always @ (posedge clk)
        begin     
           Sum16 <= A + B + Ci;
           S <= Sum16[15:0];
           Co <= Sum16[16] ;
        end
        
     assign result = Sum16;
    
endmodule
